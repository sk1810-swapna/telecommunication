# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FddiHf3N657zNZCR84FF8DKMyhFnXioc
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib

# Load model and scaler
model = joblib.dump(model,'rf_model.pkl')
scaler = joblib.load('scaler.pkl')

# App title
st.title("ðŸ“Š Telecom Churn Prediction")

st.markdown("Enter customer details to predict churn likelihood.")

# Sidebar input fields
def user_input():
    account_length = st.number_input("Account Length", min_value=1, max_value=300, value=100)
    customer_service_calls = st.number_input("Customer Service Calls", min_value=0, max_value=10, value=1)
    day_mins = st.number_input("Day Minutes", min_value=0.0, max_value=500.0, value=120.0)
    total_charge = st.number_input("Total Charge", min_value=0.0, max_value=100.0, value=45.0)

    input_dict = {
        'account_length': account_length,
        'customer_service_calls': customer_service_calls,
        'day_mins': day_mins,
        'total_charge': total_charge
    }
    return pd.DataFrame([input_dict])

input_df = user_input()

# Display input
st.subheader("Customer Input")
st.write(input_df)

# Scale and predict
input_scaled = scaler.transform(input_df)
prediction = model.predict(input_scaled)
prediction_proba = model.predict_proba(input_scaled)

# Show result
st.subheader("Prediction Result")
if prediction[0] == 1:
    st.error("ðŸ”” Churn Likely")
else:
    st.success("âœ… No Churn Predicted")

# Show probability
st.write(f"Probability of churn: {prediction_proba[0][1]:.2%}")
